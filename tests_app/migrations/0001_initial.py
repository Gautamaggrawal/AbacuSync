# Generated by Django 5.1.7 on 2025-03-08 14:07

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("students", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Test",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="title"),
                ),
                (
                    "duration_minutes",
                    models.IntegerField(
                        default=8, verbose_name="duration (minutes)"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="updated at"
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        help_text="Level this test is designed for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tests",
                        to="students.level",
                    ),
                ),
            ],
            options={
                "verbose_name": "test",
                "verbose_name_plural": "tests",
            },
        ),
        migrations.CreateModel(
            name="TestSection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=100, verbose_name="title"),
                ),
                ("order", models.IntegerField(verbose_name="order")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="updated at"
                    ),
                ),
                (
                    "test",
                    models.ForeignKey(
                        help_text="Test this section belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sections",
                        to="tests_app.test",
                    ),
                ),
            ],
            options={
                "verbose_name": "test section",
                "verbose_name_plural": "test sections",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="StudentTest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("INTERRUPTED", "Interrupted"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="start time"
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="end time"
                    ),
                ),
                (
                    "score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="score",
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        auto_now=True, verbose_name="last activity"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created at"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        help_text="Student taking the test",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tests",
                        to="students.student",
                    ),
                ),
                (
                    "test",
                    models.ForeignKey(
                        help_text="Test being taken",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_tests",
                        to="tests_app.test",
                    ),
                ),
                (
                    "current_section",
                    models.ForeignKey(
                        blank=True,
                        help_text="Current section the student is working on",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="in_progress_tests",
                        to="tests_app.testsection",
                    ),
                ),
            ],
            options={
                "verbose_name": "student test",
                "verbose_name_plural": "student tests",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                ("text", models.TextField(verbose_name="question text")),
                ("order", models.IntegerField(verbose_name="order")),
                ("marks", models.IntegerField(default=1, verbose_name="marks")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="updated at"
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        help_text="Section this question belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="tests_app.testsection",
                    ),
                ),
            ],
            options={
                "verbose_name": "question",
                "verbose_name_plural": "questions",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="TestSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "session_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        verbose_name="session ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="active"),
                ),
                (
                    "remaining_time_seconds",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="remaining time (seconds)",
                    ),
                ),
                (
                    "last_sync",
                    models.DateTimeField(
                        auto_now=True, verbose_name="last sync"
                    ),
                ),
                (
                    "last_question",
                    models.ForeignKey(
                        blank=True,
                        help_text="Last question the student was working on",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sessions",
                        to="tests_app.question",
                    ),
                ),
                (
                    "student_test",
                    models.OneToOneField(
                        help_text="Test this session belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="session",
                        to="tests_app.studenttest",
                    ),
                ),
            ],
            options={
                "verbose_name": "test session",
                "verbose_name_plural": "test sessions",
            },
        ),
        migrations.CreateModel(
            name="StudentAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "answer_text",
                    models.TextField(
                        blank=True, null=True, verbose_name="answer text"
                    ),
                ),
                (
                    "is_correct",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="is correct"
                    ),
                ),
                (
                    "marks_obtained",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="marks obtained",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="updated at"
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        help_text="Question being answered",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_answers",
                        to="tests_app.question",
                    ),
                ),
                (
                    "student_test",
                    models.ForeignKey(
                        help_text="Test this answer belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="tests_app.studenttest",
                    ),
                ),
            ],
            options={
                "verbose_name": "student answer",
                "verbose_name_plural": "student answers",
                "indexes": [
                    models.Index(
                        fields=["student_test", "question"],
                        name="tests_app_s_student_9ae5b4_idx",
                    ),
                    models.Index(
                        fields=["is_correct"],
                        name="tests_app_s_is_corr_91d6e4_idx",
                    ),
                ],
                "unique_together": {("student_test", "question")},
            },
        ),
        migrations.AddIndex(
            model_name="test",
            index=models.Index(
                fields=["is_active"], name="tests_app_t_is_acti_239ff1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="test",
            index=models.Index(
                fields=["level", "is_active"],
                name="tests_app_t_level_i_1a1766_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="testsection",
            index=models.Index(
                fields=["test", "order"], name="tests_app_t_test_id_b6d89b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="studenttest",
            index=models.Index(
                fields=["student", "status"],
                name="tests_app_s_student_f948a3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="studenttest",
            index=models.Index(
                fields=["status", "start_time"],
                name="tests_app_s_status_9add54_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="studenttest",
            index=models.Index(
                fields=["test", "status"], name="tests_app_s_test_id_9a0e19_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="question",
            index=models.Index(
                fields=["section", "order"],
                name="tests_app_q_section_e25a9f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="testsession",
            index=models.Index(
                fields=["session_id"], name="tests_app_t_session_4bfc68_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testsession",
            index=models.Index(
                fields=["is_active"], name="tests_app_t_is_acti_3d007f_idx"
            ),
        ),
    ]
